<!DOCTYPE html>
<html>
	<head>
		<title>RDF/XML Parser</title>
		<style>
			label {
			display: inline-block;
			width: 12em;
			}
			.toplabel {
			font-weight: bold;
			}
		</style>
		<script>
			function parseRDF(rdfXml) {
				// Neues JavaScript-Objekt zum Speichern der Daten
				var data = {};
				
				// XML-Parser erstellen
				var parser = new DOMParser();
				var xmlDoc = parser.parseFromString(rdfXml, "text/xml");
				
				// Alle "owl:NamedIndividual"-Elemente auswählen
				var individuals = xmlDoc.getElementsByTagName("owl:NamedIndividual");
				
				// Durch jedes "owl:NamedIndividual"-Element iterieren
				for (var i = 0; i < individuals.length; i++) {
					var individual = individuals[i];
					
					
					
					// Neues Objekt für den aktuellen Schlüssel erstellen
					
					
					// Alle "schema:ingredients"-Elemente auswählen
					// var ingredients = individual.getElementsByTagName("schema:ingredients");
					
					// Durch jedes "schema:ingredients"-Element iterieren
					// for (var j = 0; j < ingredients.length; j++) {
						var obj = {};
						// "rdf:about"-Attribut für den individuellen Schlüssel verwenden
						var key = individual.getAttribute("rdf:about");
						// var ingredient = ingredients[j];
						// "rdfs:label" und "schema:value" auswählen
						if (typeof(individual.getElementsByTagName("rdfs:label")[0]) != 'undefined') {
							var tmplabel = individual.getElementsByTagName("rdfs:label")[0].textContent;
							var tmptype = individual.getElementsByTagName("rdf:type")[0].textContent;
							var tmpvalue = parseFloat(individual.getElementsByTagName("schema:value")[0].textContent);
							var tmpingredients = individual.getElementsByTagName("schema:ingredients")[0].textContent;
							
							
							// "rdfs:label" als Eigenschaft und "schema:value" als Wert hinzufügen
							obj['label'] = tmplabel;
							obj['type'] = tmptype;
							obj['value'] = tmpvalue;
							obj['ingredient_FOODON'] = tmpingredients;
						}
						// Den aktuellen Schlüssel zum Datenobjekt hinzufügen
						data[key] = obj;
					// }
					
					
				}
				
				// Parsen abgeschlossen, das Datenobjekt zurückgeben
				return data;
			}
			
			function handleFileSelect(event) {
				var file = event.target.files[0];
				var reader = new FileReader();
				
				reader.onload = function(e) {
					var rdfXml = e.target.result;
					var graph = parseRDF(rdfXml);
					displayGraph(graph);
				};
				
				reader.readAsText(file);
			}
			
			function displayGraph(graph) {
				for (var resource in graph) {
					bothLog("<label class='toplabel'>Resource:</label><span class='toplabel'>" + resource + "</span>");
					var properties = graph[resource];
					for (var property in properties) {
						var values = properties[property];
						bothLog("<label>Property:</label>" + property);
						bothLog("<label>Value:</label>" + values);
					}
					bothLog("---------------------------");
				}
			}
			
			function bothLog(stringy) {
				console.log(stringy);
				outputdiv.innerHTML = outputdiv.innerHTML + stringy + '<br>';
			}
		</script>
	</head>
	<body>
		<h1>RDF/XML Parser</h1>
		<input type="file" id="fileInput" accept=".owl">
		<pre id="output"></pre>
		
		<script>
			var fileInput = document.getElementById('fileInput');
			outputdiv = document.getElementById('output');
			fileInput.addEventListener('change', handleFileSelect, false);
		</script>
	</body>
</html>
